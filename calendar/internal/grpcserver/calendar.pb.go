// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calendar.proto

package grpcserver

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Period int32

const (
	Period_DAY   Period = 0
	Period_WEEK  Period = 1
	Period_MONTH Period = 2
)

var Period_name = map[int32]string{
	0: "DAY",
	1: "WEEK",
	2: "MONTH",
}

var Period_value = map[string]int32{
	"DAY":   0,
	"WEEK":  1,
	"MONTH": 2,
}

func (x Period) String() string {
	return proto.EnumName(Period_name, int32(x))
}

func (Period) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{0}
}

type Event struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Header               string               `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	Text                 string               `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	StartTime            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamp.Timestamp `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	User                 string               `protobuf:"bytes,6,opt,name=user,proto3" json:"user,omitempty"`
	ReminderBefore       *duration.Duration   `protobuf:"bytes,7,opt,name=reminder_before,json=reminderBefore,proto3" json:"reminder_before,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{0}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Event) GetHeader() string {
	if m != nil {
		return m.Header
	}
	return ""
}

func (m *Event) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Event) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *Event) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *Event) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Event) GetReminderBefore() *duration.Duration {
	if m != nil {
		return m.ReminderBefore
	}
	return nil
}

type ResponseResult struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Error                string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseResult) Reset()         { *m = ResponseResult{} }
func (m *ResponseResult) String() string { return proto.CompactTextString(m) }
func (*ResponseResult) ProtoMessage()    {}
func (*ResponseResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{1}
}

func (m *ResponseResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseResult.Unmarshal(m, b)
}
func (m *ResponseResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseResult.Marshal(b, m, deterministic)
}
func (m *ResponseResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseResult.Merge(m, src)
}
func (m *ResponseResult) XXX_Size() int {
	return xxx_messageInfo_ResponseResult.Size(m)
}
func (m *ResponseResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseResult.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseResult proto.InternalMessageInfo

func (m *ResponseResult) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *ResponseResult) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ResponseResult) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type EventsResponse struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Events               []*Event `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	Error                string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventsResponse) Reset()         { *m = EventsResponse{} }
func (m *EventsResponse) String() string { return proto.CompactTextString(m) }
func (*EventsResponse) ProtoMessage()    {}
func (*EventsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{2}
}

func (m *EventsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventsResponse.Unmarshal(m, b)
}
func (m *EventsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventsResponse.Marshal(b, m, deterministic)
}
func (m *EventsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventsResponse.Merge(m, src)
}
func (m *EventsResponse) XXX_Size() int {
	return xxx_messageInfo_EventsResponse.Size(m)
}
func (m *EventsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EventsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EventsResponse proto.InternalMessageInfo

func (m *EventsResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *EventsResponse) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *EventsResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type EventResponse struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Event                *Event   `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	Error                string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventResponse) Reset()         { *m = EventResponse{} }
func (m *EventResponse) String() string { return proto.CompactTextString(m) }
func (*EventResponse) ProtoMessage()    {}
func (*EventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{3}
}

func (m *EventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventResponse.Unmarshal(m, b)
}
func (m *EventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventResponse.Marshal(b, m, deterministic)
}
func (m *EventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventResponse.Merge(m, src)
}
func (m *EventResponse) XXX_Size() int {
	return xxx_messageInfo_EventResponse.Size(m)
}
func (m *EventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EventResponse proto.InternalMessageInfo

func (m *EventResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *EventResponse) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *EventResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type RequestUser struct {
	User                 string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestUser) Reset()         { *m = RequestUser{} }
func (m *RequestUser) String() string { return proto.CompactTextString(m) }
func (*RequestUser) ProtoMessage()    {}
func (*RequestUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{4}
}

func (m *RequestUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestUser.Unmarshal(m, b)
}
func (m *RequestUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestUser.Marshal(b, m, deterministic)
}
func (m *RequestUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestUser.Merge(m, src)
}
func (m *RequestUser) XXX_Size() int {
	return xxx_messageInfo_RequestUser.Size(m)
}
func (m *RequestUser) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestUser.DiscardUnknown(m)
}

var xxx_messageInfo_RequestUser proto.InternalMessageInfo

func (m *RequestUser) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type EventID struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventID) Reset()         { *m = EventID{} }
func (m *EventID) String() string { return proto.CompactTextString(m) }
func (*EventID) ProtoMessage()    {}
func (*EventID) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{5}
}

func (m *EventID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventID.Unmarshal(m, b)
}
func (m *EventID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventID.Marshal(b, m, deterministic)
}
func (m *EventID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventID.Merge(m, src)
}
func (m *EventID) XXX_Size() int {
	return xxx_messageInfo_EventID.Size(m)
}
func (m *EventID) XXX_DiscardUnknown() {
	xxx_messageInfo_EventID.DiscardUnknown(m)
}

var xxx_messageInfo_EventID proto.InternalMessageInfo

func (m *EventID) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type PeriodRequest struct {
	User                 string               `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Period               Period               `protobuf:"varint,2,opt,name=period,proto3,enum=grpcserver.Period" json:"period,omitempty"`
	Date                 *timestamp.Timestamp `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PeriodRequest) Reset()         { *m = PeriodRequest{} }
func (m *PeriodRequest) String() string { return proto.CompactTextString(m) }
func (*PeriodRequest) ProtoMessage()    {}
func (*PeriodRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{6}
}

func (m *PeriodRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeriodRequest.Unmarshal(m, b)
}
func (m *PeriodRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeriodRequest.Marshal(b, m, deterministic)
}
func (m *PeriodRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeriodRequest.Merge(m, src)
}
func (m *PeriodRequest) XXX_Size() int {
	return xxx_messageInfo_PeriodRequest.Size(m)
}
func (m *PeriodRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PeriodRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PeriodRequest proto.InternalMessageInfo

func (m *PeriodRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *PeriodRequest) GetPeriod() Period {
	if m != nil {
		return m.Period
	}
	return Period_DAY
}

func (m *PeriodRequest) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func init() {
	proto.RegisterEnum("grpcserver.Period", Period_name, Period_value)
	proto.RegisterType((*Event)(nil), "grpcserver.Event")
	proto.RegisterType((*ResponseResult)(nil), "grpcserver.ResponseResult")
	proto.RegisterType((*EventsResponse)(nil), "grpcserver.EventsResponse")
	proto.RegisterType((*EventResponse)(nil), "grpcserver.EventResponse")
	proto.RegisterType((*RequestUser)(nil), "grpcserver.RequestUser")
	proto.RegisterType((*EventID)(nil), "grpcserver.EventID")
	proto.RegisterType((*PeriodRequest)(nil), "grpcserver.PeriodRequest")
}

func init() { proto.RegisterFile("calendar.proto", fileDescriptor_e3d25d49f056cdb2) }

var fileDescriptor_e3d25d49f056cdb2 = []byte{
	// 542 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x4f, 0x8f, 0xd2, 0x40,
	0x14, 0x87, 0x02, 0xa5, 0x3c, 0xa4, 0xe2, 0x68, 0xb4, 0x70, 0x50, 0xec, 0x41, 0x71, 0x0f, 0xdd,
	0x04, 0xe3, 0xc1, 0x18, 0x4d, 0xc0, 0xb2, 0x4a, 0x8c, 0xab, 0x69, 0x76, 0x63, 0xf4, 0xb2, 0x29,
	0x3b, 0x0f, 0x6c, 0x02, 0x6d, 0x9d, 0x99, 0x6e, 0xf4, 0xe4, 0x27, 0xf0, 0xc3, 0xf9, 0x8d, 0x0c,
	0x6f, 0xca, 0x2e, 0x2c, 0x20, 0xc9, 0xde, 0xfa, 0x66, 0x7e, 0x7f, 0x5e, 0xde, 0xfb, 0x4d, 0xc1,
	0x3e, 0x0f, 0x67, 0x18, 0xf3, 0x50, 0x78, 0xa9, 0x48, 0x54, 0xc2, 0x60, 0x2a, 0xd2, 0x73, 0x89,
	0xe2, 0x02, 0x45, 0xfb, 0xd1, 0x34, 0x49, 0xa6, 0x33, 0x3c, 0xa4, 0x9b, 0x71, 0x36, 0x39, 0x54,
	0xd1, 0x1c, 0xa5, 0x0a, 0xe7, 0xa9, 0x06, 0xb7, 0x1f, 0x5e, 0x07, 0xf0, 0x4c, 0x84, 0x2a, 0x4a,
	0x62, 0x7d, 0xef, 0xfe, 0x31, 0xa0, 0x32, 0xbc, 0xc0, 0x58, 0x31, 0x1b, 0x8c, 0x88, 0x3b, 0xc5,
	0x4e, 0xb1, 0x5b, 0x0b, 0x8c, 0x88, 0xb3, 0xfb, 0x60, 0x7e, 0xc7, 0x90, 0xa3, 0x70, 0x0c, 0x3a,
	0xcb, 0x2b, 0xc6, 0xa0, 0xac, 0xf0, 0xa7, 0x72, 0x4a, 0x74, 0x4a, 0xdf, 0xec, 0x25, 0x80, 0x54,
	0xa1, 0x50, 0x67, 0x0b, 0x7b, 0xa7, 0xdc, 0x29, 0x76, 0xeb, 0xbd, 0xb6, 0xa7, 0xad, 0xbd, 0xa5,
	0xb5, 0x77, 0xb2, 0xec, 0x2d, 0xa8, 0x11, 0x7a, 0x51, 0xb3, 0x17, 0x60, 0x61, 0xcc, 0x35, 0xb1,
	0xb2, 0x97, 0x58, 0xc5, 0x98, 0x13, 0x8d, 0x41, 0x39, 0x93, 0x28, 0x1c, 0x53, 0x77, 0xb1, 0xf8,
	0x66, 0x03, 0xb8, 0x2d, 0x70, 0x1e, 0xc5, 0x1c, 0xc5, 0xd9, 0x18, 0x27, 0x89, 0x40, 0xa7, 0x4a,
	0x8a, 0xad, 0x0d, 0x45, 0x3f, 0x9f, 0x42, 0x60, 0x2f, 0x19, 0x03, 0x22, 0xb8, 0xc7, 0x60, 0x07,
	0x28, 0xd3, 0x24, 0x96, 0x18, 0xa0, 0xcc, 0x66, 0x6a, 0x31, 0x07, 0xa9, 0x42, 0x95, 0x49, 0x9a,
	0x8d, 0x15, 0xe4, 0x55, 0x3e, 0x2f, 0xe3, 0x72, 0x5e, 0xf7, 0xa0, 0x82, 0x42, 0x24, 0x22, 0x1f,
	0x8c, 0x2e, 0xdc, 0x08, 0x6c, 0x1a, 0xaf, 0x5c, 0xaa, 0xee, 0xd4, 0x7b, 0x06, 0x26, 0x12, 0xd2,
	0x31, 0x3a, 0xa5, 0x6e, 0xbd, 0x77, 0xc7, 0xbb, 0xda, 0xb3, 0x47, 0x1a, 0x41, 0x0e, 0xd8, 0x61,
	0x35, 0x81, 0x86, 0x86, 0xed, 0x73, 0x7a, 0x0a, 0x15, 0x12, 0xa2, 0xe6, 0xb7, 0x1a, 0xe9, 0xfb,
	0x1d, 0x3e, 0x8f, 0xa1, 0x1e, 0xe0, 0x8f, 0x0c, 0xa5, 0x3a, 0x95, 0x3a, 0x0f, 0xb4, 0x89, 0xe2,
	0xd5, 0x26, 0xdc, 0x16, 0x54, 0x49, 0x68, 0xe4, 0x5f, 0x8f, 0x95, 0xfb, 0x1b, 0x1a, 0x9f, 0x51,
	0x44, 0x09, 0xcf, 0x35, 0xb6, 0xf1, 0xd9, 0x01, 0x98, 0x29, 0x81, 0xa8, 0x45, 0xbb, 0xc7, 0x56,
	0x5b, 0xcc, 0xe9, 0x39, 0x82, 0x79, 0x50, 0xe6, 0xa1, 0x42, 0xea, 0xf1, 0xff, 0xe1, 0x21, 0xdc,
	0xc1, 0x13, 0x30, 0xb5, 0x02, 0xab, 0x42, 0xc9, 0xef, 0x7f, 0x6d, 0x16, 0x98, 0x05, 0xe5, 0x2f,
	0xc3, 0xe1, 0x87, 0x66, 0x91, 0xd5, 0xa0, 0xf2, 0xf1, 0xd3, 0xf1, 0xc9, 0xfb, 0xa6, 0xd1, 0xfb,
	0x6b, 0x80, 0xf5, 0x36, 0x7f, 0x79, 0xec, 0x15, 0x58, 0x7d, 0xce, 0xf5, 0x43, 0xd9, 0x9c, 0x57,
	0xbb, 0xbd, 0x7a, 0xb4, 0x9e, 0x1f, 0xb7, 0xc0, 0xde, 0x40, 0xfd, 0x34, 0x5d, 0x78, 0xdf, 0x90,
	0xff, 0x1a, 0x2c, 0x1f, 0x67, 0x9a, 0x7c, 0x77, 0x83, 0x3c, 0xf2, 0xf7, 0xd0, 0xfb, 0xd0, 0x38,
	0x8a, 0x62, 0xdd, 0xfc, 0xe0, 0xd7, 0xc8, 0xdf, 0xae, 0xd1, 0xda, 0x4c, 0x41, 0x2e, 0xe4, 0x16,
	0xd8, 0x11, 0x34, 0xde, 0x21, 0xad, 0x5b, 0x87, 0x99, 0x3d, 0x58, 0x77, 0xbc, 0x4c, 0xc3, 0x7a,
	0x2b, 0xeb, 0xc9, 0x77, 0x0b, 0x83, 0x5b, 0xdf, 0x56, 0x7e, 0x5e, 0x63, 0x93, 0x76, 0xf4, 0xfc,
	0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe1, 0x96, 0xe6, 0xee, 0xe1, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CalendarClient is the client API for Calendar service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalendarClient interface {
	AddEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*ResponseResult, error)
	UpdateEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*ResponseResult, error)
	DelEvent(ctx context.Context, in *EventID, opts ...grpc.CallOption) (*ResponseResult, error)
	FindEventByID(ctx context.Context, in *EventID, opts ...grpc.CallOption) (*EventResponse, error)
	GetUserEvents(ctx context.Context, in *RequestUser, opts ...grpc.CallOption) (*EventsResponse, error)
}

type calendarClient struct {
	cc grpc.ClientConnInterface
}

func NewCalendarClient(cc grpc.ClientConnInterface) CalendarClient {
	return &calendarClient{cc}
}

func (c *calendarClient) AddEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*ResponseResult, error) {
	out := new(ResponseResult)
	err := c.cc.Invoke(ctx, "/grpcserver.Calendar/AddEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) UpdateEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*ResponseResult, error) {
	out := new(ResponseResult)
	err := c.cc.Invoke(ctx, "/grpcserver.Calendar/UpdateEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) DelEvent(ctx context.Context, in *EventID, opts ...grpc.CallOption) (*ResponseResult, error) {
	out := new(ResponseResult)
	err := c.cc.Invoke(ctx, "/grpcserver.Calendar/DelEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) FindEventByID(ctx context.Context, in *EventID, opts ...grpc.CallOption) (*EventResponse, error) {
	out := new(EventResponse)
	err := c.cc.Invoke(ctx, "/grpcserver.Calendar/FindEventByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) GetUserEvents(ctx context.Context, in *RequestUser, opts ...grpc.CallOption) (*EventsResponse, error) {
	out := new(EventsResponse)
	err := c.cc.Invoke(ctx, "/grpcserver.Calendar/GetUserEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalendarServer is the server API for Calendar service.
type CalendarServer interface {
	AddEvent(context.Context, *Event) (*ResponseResult, error)
	UpdateEvent(context.Context, *Event) (*ResponseResult, error)
	DelEvent(context.Context, *EventID) (*ResponseResult, error)
	FindEventByID(context.Context, *EventID) (*EventResponse, error)
	GetUserEvents(context.Context, *RequestUser) (*EventsResponse, error)
}

// UnimplementedCalendarServer can be embedded to have forward compatible implementations.
type UnimplementedCalendarServer struct {
}

func (*UnimplementedCalendarServer) AddEvent(ctx context.Context, req *Event) (*ResponseResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddEvent not implemented")
}
func (*UnimplementedCalendarServer) UpdateEvent(ctx context.Context, req *Event) (*ResponseResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEvent not implemented")
}
func (*UnimplementedCalendarServer) DelEvent(ctx context.Context, req *EventID) (*ResponseResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelEvent not implemented")
}
func (*UnimplementedCalendarServer) FindEventByID(ctx context.Context, req *EventID) (*EventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindEventByID not implemented")
}
func (*UnimplementedCalendarServer) GetUserEvents(ctx context.Context, req *RequestUser) (*EventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserEvents not implemented")
}

func RegisterCalendarServer(s *grpc.Server, srv CalendarServer) {
	s.RegisterService(&_Calendar_serviceDesc, srv)
}

func _Calendar_AddEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Event)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).AddEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcserver.Calendar/AddEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).AddEvent(ctx, req.(*Event))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_UpdateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Event)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).UpdateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcserver.Calendar/UpdateEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).UpdateEvent(ctx, req.(*Event))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_DelEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).DelEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcserver.Calendar/DelEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).DelEvent(ctx, req.(*EventID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_FindEventByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).FindEventByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcserver.Calendar/FindEventByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).FindEventByID(ctx, req.(*EventID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_GetUserEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).GetUserEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcserver.Calendar/GetUserEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).GetUserEvents(ctx, req.(*RequestUser))
	}
	return interceptor(ctx, in, info, handler)
}

var _Calendar_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcserver.Calendar",
	HandlerType: (*CalendarServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddEvent",
			Handler:    _Calendar_AddEvent_Handler,
		},
		{
			MethodName: "UpdateEvent",
			Handler:    _Calendar_UpdateEvent_Handler,
		},
		{
			MethodName: "DelEvent",
			Handler:    _Calendar_DelEvent_Handler,
		},
		{
			MethodName: "FindEventByID",
			Handler:    _Calendar_FindEventByID_Handler,
		},
		{
			MethodName: "GetUserEvents",
			Handler:    _Calendar_GetUserEvents_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "calendar.proto",
}
